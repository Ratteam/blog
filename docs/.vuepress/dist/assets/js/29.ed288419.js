(window.webpackJsonp=window.webpackJsonp||[]).push([[29],{329:function(n,t,s){"use strict";s.r(t);var e=s(17),a=Object(e.a)({},(function(){var n=this,t=n.$createElement,s=n._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("TOC"),n._v(" "),s("h2",{attrs:{id:"_2-两数相加"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-两数相加"}},[n._v("#")]),n._v(" 2. 两数相加")]),n._v(" "),s("p",[n._v("给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。\n如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。\n您可以假设除了数字 0 之外，这两个数都不会以 0 开头。")]),n._v(" "),s("p",[n._v("示例：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)\n输出：7 -> 0 -> 8\n原因：342 + 465 = 807\n")])])]),s("p",[n._v("解：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int sum=0;\n        ListNode *l3=NULL;\n        ListNode **node=&l3;\n        while(l1!=NULL||l2!=NULL||sum>0)\n        {\n            if(l1!=NULL)\n            {\n                sum+=l1->val;\n                l1=l1->next;\n            }\n            if(l2!=NULL)\n            {\n                sum+=l2->val;\n                l2=l2->next;\n            }\n            (*node)=new ListNode(sum%10);\n            sum/=10;\n            node=&((*node)->next);\n        }        \n        return l3;\n    }\n};\n")])])]),s("h2",{attrs:{id:"_1-两数之和"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-两数之和"}},[n._v("#")]),n._v(" 1. 两数之和")]),n._v(" "),s("p",[n._v("给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那 两个 整数，并返回他们的数组下标。\n你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。")]),n._v(" "),s("p",[n._v("示例:")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("给定 nums = [2, 7, 11, 15], target = 9\n\n因为 nums[0] + nums[1] = 2 + 7 = 9\n所以返回 [0, 1]\n")])])]),s("p",[n._v("解：")]),n._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("class Solution {\npublic:\n    vector<int> twoSum(vector<int>& nums, int target) {\n        for(int i=0;i<nums.size();i++){\n            for(int j=i+1;j<nums.size();j++){\n                if(nums[i]+nums[j]==target){\n                    return {i,j};\n                }\n            }\n        }\n        return {};\n    }\n};\n")])])])],1)}),[],!1,null,null,null);t.default=a.exports}}]);